name: "Orion Schema Versioning"

on:
  push:
    branches: [ main ]

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          persist-credentials: true

      - name: Detect changed .orion
        id: detect_orion
        run: |
          # Extraer nombre del esquema del mensaje de commit
          MSG="${{ github.event.head_commit.message }}"
          SCHEMA_NAME=$(echo "$MSG" | sed -E 's/^orion\((accept|cancel)\): ([^,]+).*$/\2/')
          
          # Buscar el archivo .orion SIEMPRE en el commit anterior
          SCRIPT=$(git ls-files --with-tree=HEAD^ | grep -F "$SCHEMA_NAME" || true)
          
          if [ -z "$SCRIPT" ]; then
            echo "Advertencia: No se encontró el archivo $SCHEMA_NAME en el commit anterior"
          else
            echo "Encontrado en commit anterior: $SCRIPT"
          fi
          
          echo "script=$SCRIPT" >> $GITHUB_OUTPUT

      - name: Parse commit message
        id: parse_msg
        run: |
          MSG="${{ github.event.head_commit.message }}"
          if ! echo "$MSG" | grep -qE '^orion\((accept|cancel)\): [^,]+'; then
            echo "Not an orion action commit – skipping."
            exit 78
          fi
          ACTION=$(echo "$MSG" | sed -E 's/^orion\((accept|cancel)\):.*$/\1/')
          SCHEMA_PATH="${{ steps.detect_orion.outputs.script }}"
          SCHEMA_NAME=$(echo "$MSG" | sed -E 's/^orion\((accept|cancel)\): ([^,]+).*$/\2/')
          
          # Corregir la extracción de descripción - usar \2 en lugar de \1
          DESC=$(echo "$MSG" | sed -E 's/^orion\((accept|cancel)\): [^,]+,?(.*)$/\2/')
          
          echo "action=$ACTION"        >> $GITHUB_OUTPUT
          echo "schema_path=$SCHEMA_PATH" >> $GITHUB_OUTPUT
          echo "schema_name=$SCHEMA_NAME" >> $GITHUB_OUTPUT
          echo "description=$DESC"     >> $GITHUB_OUTPUT

      - name: Ensure db structure
        run: |
          mkdir -p db/migrations db/orion_scripts
          [ -f db/orion_schema_version.txt ] || echo "-1" > db/orion_schema_version.txt
          if [ ! -f db/version_table.md ]; then
            echo "# Orion Schema Version History"                       > db/version_table.md
            echo ""                                                    >> db/version_table.md
            echo "| Version | Fichero \`.orion\` | Descripción | Fecha | Commit SHA |" \
                                                                     >> db/version_table.md
            echo "|:-------:|:-----------------|:-----------:|:-----:|:----------:|" \
                                                                     >> db/version_table.md
          fi
          cat db/orion_schema_version.txt
          cat db/version_table.md

      - name: Handle accept
        if: steps.parse_msg.outputs.action == 'accept'
        run: |
          # 1) bump version
          CUR=$(cat db/orion_schema_version.txt)
          NEXT=$((CUR + 1))
          echo "$NEXT" > db/orion_schema_version.txt

          # 2) archive previous .orion
          PREV=$CUR
          mkdir -p db/orion_scripts
          git show HEAD^:"${{ steps.parse_msg.outputs.schema_path }}" \
            > db/orion_scripts/V${PREV}_${{ steps.parse_msg.outputs.schema_name }}

          # 3) append row to table
          DATE="$(date '+%Y-%m-%d %H:%M %Z')"
          SHA="${GITHUB_SHA::7}"
          printf "| %s | %s | %s | %s | %s |\n" \
            "$NEXT" \
            "${{ steps.parse_msg.outputs.schema_name }}" \
            "${{ steps.parse_msg.outputs.description }}" \
            "$DATE" \
            "$SHA" \
            >> db/version_table.md
          
          # 4) Preparar todos los cambios para el commit
          git add -A  # Staging explicitly all changes
          echo "Todos los cambios han sido preparados para el commit"

      - name: Handle cancel
        if: steps.parse_msg.outputs.action == 'cancel'
        run: |
          # Remove the .orion file from the repository
          ORION_FILE="${{ steps.parse_msg.outputs.schema_name }}"
          if [ -f "$ORION_FILE" ]; then
            rm -f "$ORION_FILE"
            git add -A  # Staging explicitly both additions and deletions
            echo "Removed and staged deletion of file: $ORION_FILE"
          else
            echo "Warning: .orion file not found at $ORION_FILE"
          fi

      - name: Stage & commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: schema ${{ steps.parse_msg.outputs.action }} ${{ steps.parse_msg.outputs.schema_name }}"
          file_pattern: |
            db/orion_schema_version.txt
            db/version_table.md
            db/orion_scripts/**
            ${{ steps.parse_msg.outputs.schema_path }}
          push_options: --force-with-lease
